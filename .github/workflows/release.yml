name: release
on:
  release:
    types: [published]
jobs:
  publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        architecture: ["x64", "x86"]
        # Linux builds don't need to run across different Python versions,
        # they will all be installed under the manylinux action
        exclude:
          - os: macos-latest
            architecture: "x86"
          - os: ubuntu-latest
        # Use the latest Python version as a base for Linux builds
        include:
          - os: ubuntu-latest
            python-version: "3.x"
            architecture: "x64"
    steps:
      - uses: actions/checkout@v2
        with:
          # LFS is not needed for releases
          lfs: false
          submodules: true
          # Tags are needed to compute the current version number
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Install tox and pypa-build
        run: |
          pip install --upgrade pip
          pip install tox build
      - name: Build sdist
        # Do this before the manylinux build, so the output directory doesn't get created by Docker
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          pyproject-build --sdist
      - name: Build manylinux wheels
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64
        with:
          python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39 cp310-cp310'
          # Necessary for setuptools_scm to read the version from Git
          system-packages: 'git-lfs'
      - name: Remove non-manylinux wheels
        if: ${{ matrix.os == 'ubuntu-latest' }}
        # Those are built as intermediate artifacts, but should not be published
        # Since these are built by Docker, they must be removed with sudo
        run: |
           sudo rm -f dist/*-linux*.whl
      - name: Build non-Linux wheels
        if: ${{ matrix.os != 'ubuntu-latest' && matrix.os != 'macos-latest' }}
        run: |
          pyproject-build --wheel
      - name: Build wheel (macOS x86_64)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          MACOSX_DEPLOYMENT_TARGET="10.14" _PYTHON_HOST_PLATFORM="macosx-10.14-x86_64" ARCHFLAGS="-arch x86_64" pyproject-build --wheel
      - name: Build wheel (macOS arm64)
        if: ${{ matrix.os == 'macos-latest' && matrix.python-version != '2.7' && matrix.python-version != '3.4' && matrix.python-version != '3.5' && matrix.python-version != '3.6' && matrix.python-version != '3.7' }}
        run: |
          MACOSX_DEPLOYMENT_TARGET="11.0" _PYTHON_HOST_PLATFORM="macosx-11.0-arm64" ARCHFLAGS="-arch arm64" pyproject-build --wheel
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: "true"
        run: |
          tox -e release
